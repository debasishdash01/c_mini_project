A function is a self-contained block of statements that perform a
coherent task of some kind. Every C program can be thought of as
a collection of these functions.

Why write separate functions at all? Why not squeeze the entire
logic into one function, main( )? 
Two reasons:

(a) Writing functions avoids rewriting the same code over and
over. Suppose you have a section of code in your program
that calculates area of a triangle. If later in the program you
want to calculate the area of a different triangle, you won’t
like it if you are required to write the same instructions all
over again. Instead, you would prefer to jump to a ‘section of
code’ that calculates area and then jump back to the place
from where you left off. This section of code is nothing but a
function.
(b) Using functions it becomes easier to write programs and keep
track of what they are doing. If the operation of a program can
be divided into separate activities, and each activity placed in
a different function, then each could be written and checked
more or less independently. Separating the code into modular
functions also makes the program easier to design and
understand.